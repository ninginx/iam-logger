steps:
- name: gcr.io/cloud-builders/gcloud
  entrypoint: 'bash'
  args: [
  '-c',
  "echo Environment Value Setiing &&
  sed -i 's|VAR_TW_API_KEY|$_VAR_TW_API_KEY|' .env.example &&
  sed -i 's|VAR_TW_API_SECRET|$_VAR_TW_API_SECRET|' .env.example &&
  sed -i 's|VAR_TW_TOKEN|$_VAR_TW_TOKEN|' .env.example &&
  sed -i 's|VAR_TW_TOKEN_SECRET|$_VAR_TW_TOKEN_SECRET|' .env.example &&
  echo .env.example"
  ]
- name: gcr.io/cloud-builders/gcloud
  entrypoint: 'bash'
  args: [
  '-c',
  "cp .env.example .env"
  ]
- name: 'gcr.io/cloud-builders/docker'
  entrypoint: 'bash'
  args: ['-c', "docker build -t gcr.io/$PROJECT_ID/cloudrun-backend:$COMMIT_SHA . -f ./Dockerfile"]
- name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'gcr.io/$PROJECT_ID/cloudrun-backend:$COMMIT_SHA']
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  entrypoint: 'bash'
  args: [
  '-c',
  'gcloud run deploy cloudrun-backend --image gcr.io/$PROJECT_ID/cloudrun-backend:$COMMIT_SHA
  --region asia-northeast1 --platform managed --max-instances 4 &&
  echo All operations completed successfully'
  ]
images:
- gcr.io/$PROJECT_ID/cloudrun-backend:$COMMIT_SHA

timeout: 600s